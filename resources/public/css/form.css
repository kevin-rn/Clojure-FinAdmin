@import url("global.css");

#forms-component > form > fieldset {
    margin-top: 10px;
}

.dropzone {
    border-style: dashed;
    border-width: 2px;
    border-color: var(--border-clr);
    border-radius: 10px;
    height: 10em;
    margin: 10px 0 10px 0;

    p {
        margin-top: 10px;
    }

    p:last-child {
        font-size: 14px;
    }

    img {
        height: 30px;
        width: auto;
        filter: var(--grey-filter-clr);
    }

    p span {
        font-weight: 510;
    }
}

.dropzone:hover {
    background-color: color-mix(in srgb, var(--accent-clr), transparent 75%);
    border-color: var(--txt-shadow-clr);
}

.dropzone:active {
    background-color: color-mix(in srgb, var(--secondary-txt-clr), transparent 75%);
    border-color: var(--txt-shadow-clr);
}


/* Popup dialog modal styling */
dialog.popup {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    border-radius: 10px;
    padding: 20px;
    box-shadow: 0 4px 8px 0 var(--box-shadow-clr), 0 6px 20px 0 var(--box-shadow-clr);
    width: 30%;
    max-width: 400px;
    text-align: center;
    z-index: 5;
    border-color: var(--primary-txt-clr)
}

.backdrop {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background: rgba(0, 0, 0, 0.5);
    z-index: 4;
  }


/* Form Select options styling */
select {
    padding: 0.5em 4em 0.5em 1em;
    background: var(--select-clr);
    color: var(--primary-txt-clr);
    border: 0;
    z-index: 1;
    /* appearance: none; */
}

.custom-select{
    position: relative;
    display: inline-block;
}

.custom-select-arrow {
    position: absolute;
    top: 0;
    right:0;
    display: block;
    background: var(--select-arrow-clr);
    height: 100%;
    width: 3em;
    pointer-events: none;
}

.custom-select-arrow::before,
.custom-select-arrow::after {
    --arr-size: 0.35em;
    content: '';
    position: absolute;
    width: 0;
    height: 0;
    left: 50%;
    transform: translate(-50%, -50%);
}

.custom-select-arrow::before {
    border-left: var(--arr-size) solid transparent;
    border-right: var(--arr-size) solid transparent;
    border-bottom: var(--arr-size) solid var(--primary-txt-clr);
    top: 35%;
}

.custom-select-arrow::after {
    border-left: var(--arr-size) solid transparent;
    border-right: var(--arr-size) solid transparent;
    border-top: var(--arr-size) solid var(--primary-txt-clr);
    top: 65%;
}


/* Form input styling */
#invoice-form fieldset, #expense-form fieldset {
    margin-top: 10px;
    margin-bottom: 10px;
}

.input-group {
    margin: 10px;

    > label {
        margin-right: 5px;
    }
}

fieldset > legend {
    font-style:oblique;
    font-size: 14px
}

/* Checkbox styling */
/* https://moderncss.dev/pure-css-custom-checkbox-style/ */
input[type="checkbox"]:not(.visibility) {
    -webkit-appearance: none;
    appearance: none;
    font: inherit;
    color: currentColor;
    width: 1.15em;
    height: 1.15em;
    border: 0.15em solid currentColor;
    border-radius: 0.15em;
    transform: translateY(-0.075em);
    display: grid;
    place-content: center;
}
  
input[type="checkbox"]:not(.visibility)::before {
    content: "";
    width: 0.65em;
    height: 0.65em;
    clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);
    transform: scale(0);
    transform-origin: bottom left;
    transition: 120ms transform ease-in-out;
    box-shadow: inset 1em 1em var(--form-control-color);
    background-color: CanvasText;
  }
  
input[type="checkbox"]:not(.visibility):checked::before {
    transform: scale(1);
}
  
  /* input[type="checkbox"]:focus {
    outline: max(2px, 0.15em) solid currentColor;
    outline-offset: max(2px, 0.15em);
  } */

.checkbox {
    display: flex;
    align-items: center;
    margin-left: 10px;
    
    > i {
        margin-left: 10px;
        font-size: 14px;
        user-select:none;
    }
}

/* Visibility toggle styling (show password) */
.visibility {
    display: none;
}

.visibility-icon {
    display: inline-block;
    margin-left: 10px;
    width: 30px;
    background-repeat: no-repeat;
    cursor: pointer;
    background-image: url("/icons/visibility.svg");
    filter: var(--base-filter-clr);
}

.visibility-icon.visible {
    background-image: url("/icons/visibility-off.svg");
}

.visibility-icon.hidden {
    background-image: url("/icons/visibility.svg");
}

/* Error message styling */
.error-message {
    margin-top: 10px;
    border-radius: 10px;
    padding: 10px;
    width: 35%;
    height: auto;
    background-color: var(--error-clr);
    border: 1px solid var(--error-border-clr); 
    gap: 10px;

    > p {
        font-size: 14px;
        color: var(--error-border-clr);
        font-weight: 600;
        margin-top: 5px;
    }

    > img {
        flex-shrink: 0;
        filter: var(--hover-filter-color);
    }
}

#warning-sign p {
    margin: 5px;
    font-style: italic;
    font-size: 13px;
}

#warning-sign > div {
    margin-bottom: 5px;
}

/* Table styling */
table {
    width: 100%;
    border-collapse: separate;
    border-spacing: 0;

    thead th {
        position: sticky;
        top: 0px;
        z-index: 2;
       
    }

    th {
        background-color: var(--primary-txt-clr);
        padding: 5px;
        border-bottom: 2px solid;
    }

    td {
        padding: 5px;
    }


}

table tr:nth-child(even) td {
    background-color: var(--box-clr);
}

#transaction-table tr:hover:not(.non-items) {
    background-color: var(--accent-clr);
    cursor: pointer;
    td {
        background-color: unset;
    }
}

#transaction-table tr:focus:not(.non-items), #transaction-table tr:active:not(.non-items) {
    background-color: var(--secondary-txt-clr);
    cursor: pointer;
}

#transaction-details {
    margin-bottom: 10px;
    margin-top: 5px;
}

.sort-icon {
    display: inline-block;
    position: absolute;
    width: 2em;
    height: auto;
    z-index: 2;
}

#sort-btn-initial,
#sort-btn-asc,
#sort-btn-desc {
    position: relative;
    top: 0;
    right: 0;
    transform: translate(-10%, -15%)  rotate(180deg);
    width: 2em;
    height: auto;
    filter: var(--grey-filter-clr);
}


#sort-btn-initial {
    filter: var(--base-filter-clr);
}

#sort-btn-desc {
    transform: translate(-10%, -15%);
}